openapi: 3.0.0
info:
  title: Order Serivce
  description: Order Service.
  contact:
    name: Order Serivce
  version: 0.0.1
servers:
  - url: http://localhost
paths:
  /v1/orders:
    get:
      tags:
        - Order
      summary: Get list of Orders.
      operationId: getOrders
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Order'
        404:
          description: No Orders found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrowableProblem'
    post:
      tags:
        - Order
      summary: create a new Order.
      operationId: createOrder
      requestBody:
        description: OrderDTO
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        201:
          description: Order created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        400:
          description: Invalid input.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrowableProblem'
  /v1/orders/{order_id}:
    get:
      tags:
        - Order
      summary: get a spectial Order.
      operationId: getOrder
      parameters:
        - name: order_id
          in: path
          description: The unique Id of a Order.
          required: true
          schema:
            type: string
      responses:
        200:
          description: Order found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrowableProblem'
    put:
      tags:
        - Order
      summary: update a specific Order.
      operationId: updateOrder
      parameters:
        - name: order_id
          in: path
          description: The unique Id of a Order.
          required: true
          schema:
            type: string
      requestBody:
        description: OrderDTO
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: Order updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        404:
          description: Order not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrowableProblem'
components:
  schemas:
    Address:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        street:
          type: string
        postal_code:
          type: string
        country_code:
          type: string
    Order:
      type: object
      properties:
        order_id:
          type: string
        customer_id:
          type: string
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        total_price:
          type: number
          format: float
        currency:
          type: string
        order_items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    Product:
      type: object
      properties:
        product_id:
          type: string
        promotion_id:
          type: string
        name:
          type: string
        price:
          type: number
          format: float
    OrderItem:
      type: object
      properties:
        line:
          type: string
        price:
          type: number
          format: float
    ThrowableProblem:
      type: object
      description: ThrowableProblem