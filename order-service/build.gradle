import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

buildscript {
    ext {
        springBootVersion = '2.1.3.RELEASE'
        openApiGeneratorGraldeVersion = '3.3.4'
        orikaMapperVersion = "1.5.2"
        lombokVersion = "1.16.20"
        mockitoVersion = "2.18.3"

        embeddedMongoVersion = "2.2.0"
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorGraldeVersion}")
    }
}

plugins {
    id 'java'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'org.openapi.generator'


group = 'demo.sa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    implementation "ma.glasnost.orika:orika-core:${orikaMapperVersion}"
    implementation "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache:${springBootVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorGraldeVersion}"

    implementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embeddedMongoVersion}"


    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

task orderApi(type: GenerateTask) {
    inputSpec = "$rootDir/src/main/resources/api/order-api.yml".toString()
    configFile = "$rootDir/src/main/resources/api/order-api-codegen.json".toString()
    outputDir = "$buildDir".toString()
    generatorName = "spring"
    systemProperties = [
            apis     : "",
            models   : "",
            supportingFiles: 'ApiUtil.java'
    ]
    configOptions = [
            dateLibrary: "java8",
    ]
}

compileJava.dependsOn(processResources)
compileJava.dependsOn orderApi
sourceSets.main.java.srcDir "$buildDir/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/src/main/resources"

