import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

buildscript {
	ext {
		springBootVersion = '2.1.3.RELEASE'
		springGatewayVersion = '2.1.0.RELEASE'
		openApiGeneratorGraldeVersion = '3.3.4'
		orikaMapperVersion = "1.5.2"
		lombokVersion = "1.16.20"
		mockitoVersion = "2.18.3"
		h2Version = "1.4.199"
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorGraldeVersion}")
	}
}

plugins {
	id 'java'
}


apply plugin: 'org.springframework.boot'
apply plugin: 'org.openapi.generator'


group = 'demo.sa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {

	implementation "org.springframework.boot:spring-boot-starter-webflux:${springBootVersion}"
	implementation "org.openapitools:openapi-generator-gradle-plugin:${openApiGeneratorGraldeVersion}"

	implementation "org.springframework.cloud:spring-cloud-starter-gateway:${springGatewayVersion}"
	implementation "org.springframework.cloud:spring-cloud-starter-netflix-hystrix:${springGatewayVersion}"
	testImplementation ("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

}

task orderApi(type: GenerateTask) {
	inputSpec = "$rootDir/src/main/resources/api/order-api.yml".toString()
	configFile = "$rootDir/src/main/resources/api/order-api-codegen.json".toString()
	outputDir = "$buildDir".toString()
	generatorName = "spring"
	systemProperties = [
			apis     : "false",
			models   : "",
	]
	configOptions = [
			dateLibrary: "java8",
	]
}


task productApi(type: GenerateTask) {
	inputSpec = "$rootDir/src/main/resources/api/product-api.yml".toString()
	configFile = "$rootDir/src/main/resources/api/product-api-codegen.json".toString()
	outputDir = "$buildDir".toString()
	generatorName = "spring"
	systemProperties = [
			apis     : "false",
			models   : "",
	]
	configOptions = [
			dateLibrary: "java8",
	]
}

task customerApi(type: GenerateTask) {
	inputSpec = "$rootDir/src/main/resources/api/product-api.yml".toString()
	configFile = "$rootDir/src/main/resources/api/product-api-codegen.json".toString()
	outputDir = "$buildDir".toString()
	generatorName = "spring"
	systemProperties = [
			apis     : "false",
			models   : "",
	]
	configOptions = [
			dateLibrary: "java8",
	]
}


task priceApi(type: GenerateTask) {
	inputSpec = "$rootDir/src/main/resources/api/customer-api.yml".toString()
	configFile = "$rootDir/src/main/resources/api/customer-api-codegen.json".toString()
	outputDir = "$buildDir".toString()
	generatorName = "spring"
	systemProperties = [
			apis     : "false",
			models   : "",
	]
	configOptions = [
			dateLibrary: "java8",
	]
}

compileJava.dependsOn(processResources)
compileJava.dependsOn orderApi
compileJava.dependsOn productApi
compileJava.dependsOn priceApi
compileJava.dependsOn customerApi
sourceSets.main.java.srcDir "$buildDir/src/main/java"
sourceSets.main.resources.srcDir "$buildDir/src/main/resources"

